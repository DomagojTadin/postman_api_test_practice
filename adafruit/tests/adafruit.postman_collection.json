{
	"info": {
		"_postman_id": "a9f79b0a-2ddb-4b26-b919-14d41963c4d7",
		"name": "adafruit",
		"description": "Trying out the Adafruit IoT apis.\n{{X-AIO-Key}} auth key is in an external file.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "200_user_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4fde307-4f3e-4a31-a477-4e642cef92dc",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"correct user returned\"] = responseBody.username === postman.getGlobalVariable(\"username\")",
									"}",
									"",
									"postman.setGlobalVariable(\"userId\", responseBody.id)",
									"postman.setGlobalVariable(\"defaultGroupId\", responseBody.default_group_id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7ded3d3c-8f42-4700-9c7d-c50da08c4635",
								"exec": [
									"var crypto = require(\"crypto-js\");",
									"",
									"pm.globals.set(\"randomKey\", crypto.MD5(_.random(0, 1000)+\"test\").toString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"value": "{{X-AIO-Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_user_data_no_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76161fc0-c9d3-4ec5-9398-fdfac3bc6ae7",
								"exec": [
									"tests[\"No auth test\"] = responseCode.code === 404",
									"",
									"console.log(responseBody)",
									"",
									"if (responseCode.code === 404){",
									"    tests[\"Error response is correct\"] = responseBody.has('\"error\":\"not found') ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_user_data_invalid_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ab5408b2-9207-41be-bd19-fc559b846a95",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "80872d8d-796f-4495-a277-0d29f5fae58c",
								"exec": [
									"tests[\"Invalid auth test\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    tests[\"Response body is correct\"] = responseBody.has(\"invalid API key provided\")",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"value": "{{randomKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_user_throttle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4fde307-4f3e-4a31-a477-4e642cef92dc",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"correct throttle data returned\"] = responseBody.has(\"data_rate_limit\") ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/throttle",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"throttle"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_user_throttle_invalid_username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4fde307-4f3e-4a31-a477-4e642cef92dc",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has(\"username does not exist\") ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/testusername/throttle",
							"host": [
								"{{URL}}"
							],
							"path": [
								"testusername",
								"throttle"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_user_throttle_no_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4fde307-4f3e-4a31-a477-4e642cef92dc",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has('\"error\":\"not found') ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/throttle",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"throttle"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_user_throttle_invalid_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4fde307-4f3e-4a31-a477-4e642cef92dc",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    tests[\"Response body is correct\"] = responseBody.has(\"invalid API key provided\")",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{randomKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/throttle",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"throttle"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "activities",
			"item": [
				{
					"name": "200_activities",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									"var crypto = require(\"crypto-js\");",
									"var moment = require('moment')",
									"",
									"pm.globals.set(\"randomKey\", crypto.MD5(_.random(0, 1000)+\"test\").toString());",
									"",
									"",
									"",
									"var current_time = moment()",
									"var tomorrow = moment().add(1, 'd')",
									"var yesterday = moment().subtract(1, 'd')",
									"var last_year = moment().subtract(1, 'y')",
									"var current_time_format = moment().unix(current_time)",
									"",
									"postman.setEnvironmentVariable('current_time', current_time)",
									"postman.setEnvironmentVariable('tomorrow', tomorrow)",
									"postman.setEnvironmentVariable('yesterday', yesterday)",
									"postman.setEnvironmentVariable('last_year', last_year)",
									"postman.setEnvironmentVariable('current_time_format', current_time_format)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"    ",
									"    postman.setEnvironmentVariable(\"activites_records_count\", responsebody.length)",
									"    ",
									"    postman.setEnvironmentVariable(\"activites_records_count_max\", responsebody.length+1)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"value": "{{X-AIO-Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_activities_invalid_username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "06ca249c-0364-443b-aefa-bc710d621ab8",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has(\"username does not exist\") ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/testusername/activities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"testusername",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_limit_1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct user activity returned\"] = _.size(responsebody)==1",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?limit=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_limit_max",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "671187e5-6928-4920-bab2-f8da50845679",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?limit={{activites_records_count_max}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{activites_records_count_max}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_limit_0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8eab468-e877-4b93-8483-f360d5dc554f",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct error message\"] = responsebody.body == 'limit must be greater than 0'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?limit=0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_limit_blank",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1df38b77-1cf7-4085-b6d1-bdf6588f239f",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?limit=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401_activities_qp_limit_-1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d4ebf352-d695-438a-87a1-d6e750900497",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct error message\"] = responsebody.body == 'limit must be greater than 0'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?limit=-1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404_activities_qp_start_time",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct user activity returned\"] = _.size(responsebody)==1",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{current_time}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{current_time}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401_activities_qp_start_time_invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct invalid format error message\"] = responsebody.body === 'invalid date format'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{current_time_format}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{current_time_format}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_start_time_blank",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404_activities_qp_start_time_future",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct error message\"] = responsebody.body === 'start time cannot be in the future'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{tomorrow}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{tomorrow}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_start_time_past",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{yesterday}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{yesterday}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_end_time",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?end_time={{current_time}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "end_time",
									"value": "{{current_time}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401_activities_qp_end_time_invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct invalid format error message\"] = responsebody.body === 'invalid date format'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?end_time={{current_time_format}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "end_time",
									"value": "{{current_time_format}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_end_time_blank",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?end_time=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "end_time",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_end_time_future",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"correct number of user activities returned\"] = responsebody.length>1;",
									"    ",
									"    tests[\"activities data is returned successfully\"] = _.filter(responsebody, function(value){return value.data.has(\"created_at\")}).length == responsebody.length;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?end_time={{tomorrow}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "end_time",
									"value": "{{tomorrow}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404_activities_qp_end_time_past",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct error message\"] = responsebody.body === 'end time cannot be in the past'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?end_time={{yesterday}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "end_time",
									"value": "{{yesterday}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401_activities_qp_start_time_after_end_time",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct invalid format error message\"] = responsebody.body === 'start time cannot be after end time'",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{yesterday}}&end_time={{tomorrow}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{yesterday}}"
								},
								{
									"key": "end_time",
									"value": "{{tomorrow}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200_activities_qp_limit_start_time_end_time",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14964617-6a07-4bd3-b9d0-3fbeabaff605",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    tests[\"correct user activity returned\"] = _.size(responsebody)==1",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/activities?start_time={{last_year}}&end_time={{current_time}}&limit=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"activities"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{last_year}}"
								},
								{
									"key": "end_time",
									"value": "{{current_time}}"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "feeds",
			"item": [
				{
					"name": "200_feeds",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    ",
									"    postman.setEnvironmentVariable(\"feedKey\", responsebody[0].key)",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_feeds_invalid_username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response body is correct\"] = responseBody.has('not found - that username does not exist')",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/testUsername/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"testUsername",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_feeds_no_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has('\"error\":\"not found')",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_feeds_invalid_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    tests[\"Response body is correct\"] = responseBody.has(\"invalid API key provided\")",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{randomKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_create_feed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									"var moment = require('moment')",
									"",
									"postman.setEnvironmentVariable('testFeedTime', String(moment().valueOf()))",
									"postman.setEnvironmentVariable('randomKey', String(_.random(0,100000)))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 201",
									"",
									"if (responseCode.code === 201) {",
									"    var responsebody = JSON.parse(responseBody);",
									"",
									"    tests[\"Response Username is correct\"] = ",
									"    responsebody.username === postman.getEnvironmentVariable('username')",
									"    ",
									"    ",
									"    console.log(responsebody.name)",
									"    console.log('testFeed+'+String(postman.getEnvironmentVariable('testFeedTime')))",
									"    tests[\"Response Name is correct\"] = responsebody.name === 'testFeed+'+String(postman.getEnvironmentVariable('testFeedTime'))",
									"",
									"    postman.setEnvironmentVariable(\"feedNewKey\", responsebody.key)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"testFeed+{{testFeedTime}}\",\n\"key\": \"{{randomKey}}\",\n\"description\": \"testFeedCount\",\n\"license\": \"testLicense\"\n}"
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_create_feed_invalid_username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response body is correct\"] = responseBody.has('not found - that username does not exist')",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"testFeed+{{testFeedTime}}\",\n\"key\": \"{{randomKey}}\",\n\"description\": \"testFeedCount\",\n\"license\": \"testLicense\"\n}"
						},
						"url": {
							"raw": "{{URL}}/testUsername/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"testUsername",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_create_feed_blank_name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 400",
									"",
									"if (responseCode.code === 400) {",
									"    tests[\"response body is correct\"] = responseBody.has(\"Name can't be blank\")",
									"    && responseBody.has(\"Key can't be blank\")",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"\",\n\"key\": \"{{randomKey}}\",\n\"description\": \"testFeedCount\",\n\"license\": \"testLicense\"\n}"
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_create_feed_no_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has('\"error\":\"not found')",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"testFeed+{{testFeedTime}}\",\n\"key\": \"{{randomKey}}\",\n\"description\": \"testFeedCount\",\n\"license\": \"testLicense\"\n}"
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_create_feed_invalid_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    tests[\"Response body is correct\"] = responseBody.has(\"invalid API key provided\")",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{randomKey}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"\",\n\"key\": \"{{randomKey}}\",\n\"description\": \"testFeedCount\",\n\"license\": \"testLicense\"\n}"
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_delete_feed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"        var responsebody = JSON.parse(responseBody);",
									"    ",
									"    tests[\"Successful API Call\"] = responsebody.key === postman.getEnvironmentVariable('feedNewKey')",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds/{{feedNewKey}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds",
								"{{feedNewKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "404_delete_feed_no_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Error response is correct\"] = responseBody.has('\"error\":\"not found')",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds/{{feedNewKey}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds",
								"{{feedNewKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "401_delete_feed_invalid_auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 401",
									"",
									"if (responseCode.code === 401) {",
									"    tests[\"Response body is correct\"] = responseBody.has(\"invalid API key provided\")",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{randomKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds/{{feedNewKey}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds",
								"{{feedNewKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_delete_feed_invalid_feed_key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 404",
									"",
									"if (responseCode.code === 404) {",
									"",
									"    tests[\"response body is correct\"] = responseBody.has(\"not found - There is no feed with the key '\"+String(postman.getEnvironmentVariable('feedNewKey')))",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds/{{feedNewKey}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds",
								"{{feedNewKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "200_verify_feeds",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b571652-ea85-4b66-bef8-a1aabe901653",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86badf8b-f22d-4dc7-b370-e0e3ad6d24b7",
								"exec": [
									"tests[\"Successful API Call\"] = responseCode.code === 200",
									"",
									"if (responseCode.code === 200) {",
									"    var responsebody = JSON.parse(responseBody);",
									"    ",
									"    tests[\"Correct feeds are available\"] = responseBody.has(postman.getEnvironmentVariable(\"feedNewKey\")) === false",
									"    ",
									"    postman.setEnvironmentVariable(\"feedKey\", responsebody.key)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AIO-Key",
								"type": "text",
								"value": "{{X-AIO-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/{{username}}/feeds",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{username}}",
								"feeds"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "${X-AIO-Key}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "12d3ca8d-085e-4acc-b502-a5015e424c2d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b7a856ce-c083-4b10-a599-0e66aa917a1b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}